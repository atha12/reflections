What happens when you initialize a repository? Why do you need to do it?

	when you initialize a repository we use git init for it.
	A .git is produced which can only be viewed by command
	ls -a. A repo is used to store files and then we can 
	track their history.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	A staging directory is very different from the working
	directory or repository. A staging directory is a 
	temporary area from where you can commit for specific
	files. A repository consists of the working directory 
	and .git file.	

How can you use the staging area to make sure you have one commit per logical
change?
	By adding only one file per change by add command we can ensure.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	
	Branches are used like versions. While not necesserily updates they
	allow you to manipulate your code and save them for later use.

How do the diagrams help you visualize the branch structure?

	A diagram helps you visualise all the commits that were in a specific
	branch so that we can keep tracks of the commits

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

